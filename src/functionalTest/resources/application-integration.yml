spring:
  mail:
    from: no-reply@reform.hmcts.net
    to:  abhijit.diwan@hmcts.net,mallikarjun.puttana@hmcts.net
    subject:  LRD - Exception in processing -
    host: mta.reform.hmcts.net
    port: 25
    enabled: true
    properties:
      mail-smtp:
        starttls:
          enable: false
        ssl:
          trust: "*"
  main:
    allow-circular-references: true
  flyway:
    locations: classpath:db/testmigration
    enabled: true
  batch:
    jdbc:
     initialize-schema: always
    # set batch false in integration test and run batch manually with batch runner to set dynamic test property values
    # eg. dynamic properties ${parent.file.name}
    job:
      enabled: false

#Local integration testing these values should be actual
#ACCOUNT_NAME: ${ACCOUNT_NAME}
#ACCOUNT_KEY: ${ACCOUNT_KEY}
lrd-building-location-start-route: direct:LRD-buildingLocation
lrd-court-venue-start-route: direct:LRD-courtVenue
start-route: direct:LRD
archival-route: direct:LrdArchival
archival-path: azure-blob://${azure.storage.account-name}/lrd-ref-data-archive
active-blob-path: azure-blob://${azure.storage.account-name}/lrd-ref-data
archival-file-names: service-test.csv, building_location_test.csv, court-venue-test.csv
archival-cred: credentials=#credsreg&operation=updateBlockBlob
#archival-date-format keep in dd-MM-yyyy as to delete in testing
archival-date-format: dd-MM-yyyy
file-read-time-out: 2000
scheduler-audit-select: SELECT COUNT(*) FROM dataload_schedular_audit WHERE date(scheduler_start_time) = current_date
invalid-exception-sql: INSERT INTO dataload_exception_records(table_name,scheduler_start_time,scheduler_name,error_description,updated_timestamp) VALUES(?, ?, ?, ?, ?)
invalid-jsr-sql: INSERT INTO dataload_exception_records(table_name,scheduler_start_time,scheduler_name,key,field_in_error,error_description,updated_timestamp, row_id) VALUES(?, ?, ?, ?, ?, ?, ?, ?)
jsr-threshold-limit: 5
batchjob-name: LocationRefDataLoad
scheduler-insert-sql: INSERT INTO dataload_schedular_audit (scheduler_name,file_name, scheduler_start_time,scheduler_end_time,status) VALUES(?,?,?,?,?)
audit-enable: true
lrd-route-task: lrdRouteTask
lrd-building-location-route-task: lrdBuildingLocationLoadTask
lrd-court-venue-route-task: lrdCourtVenueLoadTask
routes-to-execute: lrd-ccd-casetype-load
building-locations-routes-to-execute: lrd-building-location-load
court-venue-routes-to-execute: lrd-court-venue-load
route:
  lrd-ccd-casetype-load:
    id: lrd-ccd-casetype-load
    file-name: service-test.csv
    table-name: service_to_ccd_case_type_assoc
    truncate-sql:
      sql:TRUNCATE service_to_ccd_case_type_assoc RESTART identity?dataSource=dataSource
    insert-sql:
      sql:INSERT INTO service_to_ccd_case_type_assoc (service_code, ccd_service_name, ccd_case_type, created_date)
      VALUES (:#service_code,:#ccd_service_name,:#ccd_case_type, NOW() AT TIME ZONE 'utc')
      ON CONFLICT (service_code, ccd_case_type) DO NOTHING ?batch=true&dataSource=dataSource
    blob-path:
      azure-blob://${azure.storage.account-name}/lrd-ref-data/service-test.csv?credentials=#credsreg&operation=updateBlockBlob
    processor-class: serviceToCcdCaseTypeProcessor
    mapper-class: serviceToCcdCaseTypeMapper
    csv-binder-object: serviceToCcdCaseType
  lrd-building-location-load:
    id: lrd-building-location-load
    file-name: building_location_test.csv
    table-name: building_location
    insert-sql:
      sql:INSERT INTO building_location (epimms_id, building_location_name, building_location_status, area, region_id, cluster_id, court_finder_url, postcode, address, welsh_building_location_name, welsh_address, uprn, latitude, longitude, mrd_building_location_id,mrd_created_time,mrd_updated_time,mrd_deleted_time, created_time, updated_time)
      VALUES (:#epimms_id,:#building_location_name,:#building_location_status,:#area,:#region_id,:#cluster_id,:#court_finder_url,:#postcode,:#address,:#welsh_building_location_name,:#welsh_address,:#uprn,:#latitude,:#longitude,:#mrd_building_location_id,:#mrd_created_time,:#mrd_updated_time,:#mrd_deleted_time,NOW() AT TIME ZONE 'utc',NOW() AT TIME ZONE 'utc')
      ON CONFLICT (epimms_id) DO UPDATE SET building_location_name = :#building_location_name,building_location_status = :#building_location_status,area = :#area,region_id = :#region_id,cluster_id = :#cluster_id,
      court_finder_url = :#court_finder_url,postcode = :#postcode,address = :#address,welsh_building_location_name = :#welsh_building_location_name,welsh_address = :#welsh_address,uprn = :#uprn,latitude = :#latitude,longitude = :#longitude,mrd_building_location_id = :#mrd_building_location_id,mrd_created_time = :#mrd_created_time,mrd_updated_time = :#mrd_updated_time,mrd_deleted_time = :#mrd_deleted_time,updated_time = NOW() AT TIME ZONE 'utc'?batch=true&dataSource=dataSource
    blob-path:
      azure-blob://${azure.storage.account-name}/lrd-ref-data/building_location_test.csv?credentials=#credsreg&operation=updateBlockBlob
    processor-class: buildingLocationProcessor
    mapper-class: buildingLocationMapper
    csv-binder-object: buildingLocation
    csv-headers-expected: ePIMS_ID,Building_Location_Name,Building_Location_Status,Area,Region_ID,Cluster_ID,Court_Finder_URL,Postcode,Address,Welsh_Building_Location_Name,Welsh_Address,UPRN,Latitude,Longitude,MRD_Building_Location_ID,MRD_Created_Time,MRD_Updated_Time,MRD_Deleted_Time
    header-validation-enabled: true
  lrd-court-venue-load:
    id: lrd-court-venue-load
    file-name: court-venue-test.csv
    table-name: court_venue
    insert-sql:
      sql:INSERT INTO court_venue (epimms_id, site_name, court_name, court_status, court_open_date, region_id, court_type_id, cluster_id, open_for_public,
      court_address, postcode, phone_number, closed_date, court_location_code, dx_address, welsh_site_name, welsh_court_address, venue_name, is_case_management_location,
      is_hearing_location, welsh_venue_name, is_temporary_location, is_nightingale_court, location_type, parent_location, welsh_court_name, uprn,
      venue_ou_code, mrd_building_location_id, mrd_venue_id, service_url, fact_url, mrd_created_time, mrd_updated_time, mrd_deleted_time, external_short_name, created_time, updated_time)
      VALUES (:#epimms_id, :#site_name, :#court_name, :#court_status, TO_DATE(NULLIF(:#court_open_date,''), 'dd/MM/yyyy'), :#region_id, :#court_type_id,
      :#cluster_id, :#open_for_public::boolean, :#court_address, :#postcode, :#phone_number, TO_DATE(NULLIF(:#closed_date,''), 'dd/MM/yyyy'),
      :#court_location_code, :#dx_address, :#welsh_site_name, :#welsh_court_address, :#venue_name, :#is_case_management_location,
      :#is_hearing_location, :#welsh_venue_name, :#is_temporary_location, :#is_nightingale_court, :#location_type, :#parent_location,
      :#welsh_court_name, :#uprn, :#venue_ou_code, :#mrd_building_location_id, :#mrd_venue_id, :#service_url, :#fact_url,
      :#mrd_created_time, :#mrd_updated_time, :#mrd_deleted_time, :#external_short_name, NOW() AT TIME ZONE 'utc', NOW() AT TIME ZONE 'utc')
      ON CONFLICT (epimms_id,court_type_id) do update set epimms_id = :#epimms_id, site_name = :#site_name, court_name = :#court_name,
      court_status = :#court_status, court_open_date = TO_DATE(NULLIF(:#court_open_date,''), 'dd/MM/yyyy'),
      region_id = :#region_id, court_type_id = :#court_type_id, cluster_id = :#cluster_id, open_for_public = :#open_for_public::boolean, court_address = :#court_address,
      postcode = :#postcode, phone_number = :#phone_number, closed_date = TO_DATE(NULLIF(:#closed_date,''), 'dd/MM/yyyy'),
      dx_address = :#dx_address, welsh_site_name = :#welsh_site_name, welsh_court_address = :#welsh_court_address, venue_name = :#venue_name,
      is_case_management_location = :#is_case_management_location, is_hearing_location = :#is_hearing_location, welsh_venue_name = :#welsh_venue_name,
      is_temporary_location = :#is_temporary_location, is_nightingale_court = :#is_nightingale_court, location_type = :#location_type, parent_location = :#parent_location,
      welsh_court_name = :#welsh_court_name, uprn = :#uprn, venue_ou_code = :#venue_ou_code, mrd_building_location_id = :#mrd_building_location_id,
      mrd_venue_id = :#mrd_venue_id, service_url = :#service_url, fact_url = :#fact_url,
      mrd_created_time = :#mrd_created_time, mrd_updated_time = :#mrd_updated_time, mrd_deleted_time = :#mrd_deleted_time,
      external_short_name = :#external_short_name, updated_time = NOW() AT TIME ZONE 'utc'?batch=true&dataSource=dataSource
    blob-path:
      azure-blob://${azure.storage.account-name}/lrd-ref-data/court-venue-test.csv?credentials=#credsreg&operation=updateBlockBlob
    processor-class: courtVenueProcessor
    mapper-class: courtVenueMapper
    csv-binder-object: courtVenue
    csv-headers-expected: ePIMS_ID,Site_Name,Court_Name,Court_Status,Court_Open_Date,Region_ID,Court_Type_ID,Cluster_ID,Open_For_Public,Court_Address,Postcode,Phone_Number,Closed_Date,Court_Location_Code,Dx_Address,Welsh_Site_Name,Welsh_Court_Address,Venue_Name,Is_Case_Management_Location,Is_Hearing_Location,Welsh_Venue_Name,Is_Temporary_Location,Is_Nightingale_Court,Location_Type,Parent_Location,Welsh_Court_Name,UPRN,Venue_OU_Code,MRD_Building_Location_ID,MRD_Venue_ID,Service_URL,FACT_URL,MRD_Created_Time,MRD_Updated_Time,MRD_Deleted_Time,External_Short_Name
    header-validation-enabled: true

lrd-building-location-select-query: SELECT * FROM building_location

lrd-select-sql: SELECT * FROM service_to_ccd_case_type_assoc
lrd-court-venue-select-sql: SELECT * FROM court_venue

exception-select-query: SELECT * FROM  dataload_exception_records
ordered-exception-select-query: SELECT * FROM  dataload_exception_records order by error_description

select-dataload-scheduler: SELECT *  FROM dataload_schedular_audit

select-dataload-scheduler-failure: SELECT *  FROM dataload_schedular_audit WHERE status='Failure'

region-query: SELECT region_id FROM region
cluster-query: SELECT cluster_id FROM cluster
epimms-id-query: SELECT epimms_id FROM building_location
court-type-id-query: SELECT court_type_id FROM court_type

truncate-audit: TRUNCATE dataload_schedular_audit

truncate-exception: TRUNCATE dataload_exception_records

get-ccd-case-time: SELECT created_date FROM SERVICE_TO_CCD_CASE_TYPE_ASSOC WHERE service_code = ? and ccd_case_type = ?

jdbc-batch-size: 10

logging-component-name: Location_Ref_Data
component:
  name: Location Reference Data
mail:
  enabled: false

idempotent-flag-ingestion: true

CONTAINER_NAME: lrd-ref-data
